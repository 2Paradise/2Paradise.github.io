{"version":3,"sources":["webpack:///./src/components/Post/PostComp.tsx","webpack:///./src/templates/PostTemplate.tsx","webpack:///./src/components/PostList/PostTagListComp.tsx"],"names":["PostComp","data","post","html","frontmatter","title","type","tag","date","postUrl","decs","console","log","ContentWrap","PostWrap","PostTitle","PostDate","PostTagListComp","tags","PostContent","dangerouslySetInnerHTML","__html","styled","div","PostTemplate","React","memo","props","displayName","pageQuery","TagBox","map","url","to","key"],"mappings":"gwBAoBA,IAeeA,EAfE,SAAC,GAAqB,QAApBC,KAC4DC,KAApEC,EAD4B,EAC5BA,KAD4B,IACtBC,YAAqBC,GADC,EACPC,KADO,EACDD,OAAOE,EADN,EACMA,IAAoBC,GAD1B,EACWC,QADX,EACoBC,KADpB,EAC0BF,MAE7D,OADAG,QAAQC,IAAIJ,GAEV,kBAACK,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAYV,GACZ,kBAACW,EAAD,KAAWR,GACX,kBAACS,EAAA,EAAD,CAAiBC,KAAMX,IACvB,kBAACY,EAAD,CAAaC,wBAAyB,CAAEC,OAAQlB,QAQpDU,EAAcS,IAAOC,IAAV,KAIXT,EAAWQ,IAAOC,IAAV,KAKRR,EAAYO,IAAOC,IAAV,KAKTP,EAAWM,IAAOC,IAAV,KAMRJ,EAAcG,IAAOC,IAAV,KCnDXC,EAA8CC,IAAMC,MAAK,SAAAC,GAC7D,IAAM1B,EAAO0B,EAAM1B,KACnB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAUA,KAAMA,QAKtBuB,EAAaI,YAAc,eAEZJ,gBAEFK,EAAY,c,wfCMVZ,IAhBf,YAA6C,IAAnBC,EAAmB,EAAnBA,KACtB,OACI,kBAACY,EAAD,KACKZ,GAAQ,kBAAC,IAAD,MACRA,EAAKa,KAAI,SAAAxB,GACR,IAAMyB,EAAM,aAAezB,EAC3B,OACE,kBAAC,OAAD,CAAM0B,GAAID,EAAKE,IAAK3B,GACjBA,QAUnB,IAAMuB,EAASR,IAAOC,IAAV","file":"component---src-templates-post-template-tsx-502819fa294c3ccbdc11.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\"\nimport PostTagListComp from \"../PostList/PostTagListComp\"\n\ntype PostType = {\n  data : {\n    post: {\n      html: string\n      frontmatter: {\n        date: string\n        decs: string\n        postUrl: string\n        tag: Array<string>\n        title: string\n        type: string\n      }\n    }\n  }\n}\n\nconst PostComp = ({data}: PostType) => {\n    const {html, frontmatter : {type, title, tag, postUrl, decs, date}} = data.post;\n    console.log(date);\n    return (\n      <ContentWrap>\n        <PostWrap>\n          <PostTitle>{title}</PostTitle>\n          <PostDate>{date}</PostDate>\n          <PostTagListComp tags={tag}/>\n          <PostContent dangerouslySetInnerHTML={{ __html: html}}></PostContent>\n        </PostWrap>\n      </ContentWrap>\n    );\n}\n\nexport default PostComp;\n\nconst ContentWrap = styled.div`\n  display: flex;\n`;\n\nconst PostWrap = styled.div`\n  margin-top: 100px;\n  width: 740px;\n`;\n\nconst PostTitle = styled.div`\n  font-weight: bold;\n  font-size: 2rem;\n`;\n\nconst PostDate = styled.div`\n  font-size:0.8rem;\n  border-bottom: 1px solid #3399ff;\n  padding: 10px 0;\n`;\n\nconst PostContent = styled.div`\n  margin-top:50px;\n`;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport PostComp from \"../components/Post/PostComp\"\nimport { graphql } from \"gatsby\"\nimport { PostDetailPropsType } from \"../interface\"\n\nconst PostTemplate: React.FC<PostDetailPropsType> = React.memo(props => {\n  const data = props.data;\n  return (\n    <Layout>\n      <PostComp data={data}/>\n    </Layout>\n  );\n});\n\nPostTemplate.displayName = 'PostTemplate';\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query PostByPath($path: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    post: markdownRemark (\n      frontmatter: { postUrl: { eq: $path } }\n    ) {\n      html\n      frontmatter {\n        type\n        title\n        postUrl\n        tag\n        date\n        desc\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport {AiFillTags} from 'react-icons/ai'\n\ntype TagListType = {\n  tags : Array<string>\n}\n\nfunction PostTagListComp({tags}:TagListType) {\n    return (\n        <TagBox>\n            {tags && <AiFillTags/>}\n            {tags.map(tag => {\n              const url = \"/post?tag=\" + tag;\n              return (\n                <Link to={url} key={tag}>\n                  {tag}\n                </Link>\n              );\n            })}\n        </TagBox>\n    );\n}\n\nexport default PostTagListComp;\n\nconst TagBox = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: left;\n    border-top:1px solid #d4d4d5;\n    padding:20px;\n    \n    a {\n      color:black;\n      font-size:0.7rem;\n      font-weight: bold;\n      padding: 0 7px;\n      margin:0 5px;\n      border-radius: 5px;\n      background-color: #d4d4d5;\n    }\n`;\n"],"sourceRoot":""}