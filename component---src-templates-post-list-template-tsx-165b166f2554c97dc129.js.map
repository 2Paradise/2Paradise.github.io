{"version":3,"sources":["webpack:///./src/utils/convertText.ts","webpack:///./src/components/PostList/PostTagListComp.tsx","webpack:///./src/components/PostList/PostListComp.tsx","webpack:///./src/templates/PostListTemplate.tsx","webpack:///./src/constants/index.ts"],"names":["TagName","PostTagListComp","tags","TagBox","map","tag","url","to","key","styled","div","PostList","postData","listInfo","listTitle","value","result","toLocaleLowerCase","JAVASCRIPT","REACT","DOCKER","GRAPHQL","converText","ContentWrap","PostListWrap","className","count","edges","node","frontmatter","postUrl","title","date","PostListTemplate","join","React","memo","props","paramString","location","search","substring","searchParams","URLSearchParams","data","posts","_tag","has","get","filter","includes","postCount","length","curPage","pageCount","Math","ceil","PostListComp","displayName","pageQuery"],"mappings":"mJAAYA,E,+EAAAA,K,wBAAAA,E,cAAAA,E,gBAAAA,E,mBAAAA,M,KAQL,I,yZCiBQC,MAhBf,YAA6C,IAAnBC,EAAmB,EAAnBA,KACtB,OACI,kBAACC,EAAD,KACKD,GAAQ,kBAAC,IAAD,MACRA,EAAKE,KAAI,SAAAC,GACR,IAAMC,EAAM,aAAeD,EAC3B,OACE,kBAAC,OAAD,CAAME,GAAID,EAAKE,IAAKH,GACjBA,QAUbF,EAASM,IAAOC,IAAV,K,q/BCdZ,IA6BeC,EA7BE,SAAC,GAA6C,IAA5CC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,SAErBC,EFPkB,SAACC,GAEzB,IAAIC,EAAiB,GAErB,OAAQD,EAAME,qBACZ,IAAK,aACHD,EAAShB,EAAQkB,WACjB,MACF,IAAK,QACHF,EAAShB,EAAQmB,MACjB,MACF,IAAK,SACHH,EAAShB,EAAQoB,OACjB,MACF,IAAK,UACHJ,EAAShB,EAAQqB,QACjB,MACF,QACEL,EAASD,EAIb,OAAOC,EEfWM,CAF2C,EAAxBjB,KAIrC,OACE,kBAACkB,EAAD,KACE,kBAACC,EAAD,KACE,yBAAKC,UAAU,YAAYX,GAC3B,yBAAKW,UAAU,aAAaZ,EAASa,MAArC,SACA,4BACGd,EAASR,KAAI,SAACuB,GAAU,MACaA,EAAMC,KAAKC,YAAxCC,EADgB,EAChBA,QAASC,EADO,EACPA,MAAO1B,EADA,EACAA,IAAK2B,EADL,EACKA,KAE5B,OACE,wBAAIxB,IAAKuB,GACP,yBAAKN,UAAU,aACb,kBAAC,OAAD,CAAMlB,GAAIuB,GAAUC,GACpB,2BAAIC,IAEN,kBAAC,EAAD,CAAiB9B,KAAMG,YAYjCkB,EAAcd,IAAOC,IAAV,KAIXc,EAAef,IAAOC,IAAV,KCzCZuB,GCQkB,CACtB,SACA,WACAC,KAAK,MDX2CC,IAAMC,MAAK,SAAAC,GAAS,IAE9DC,EADWD,EAAME,SAAhBC,OAC4BC,UAAU,GACvCC,EAA+B,IAAIC,gBAAgBL,GAErDX,EAAQU,EAAMO,KAAKC,MAAMlB,MACzBmB,EAAe,MAEhBJ,EAAaK,IAAI,SAClBD,EAAOJ,EAAaM,IAAI,OACxBrB,EAAQA,EAAMsB,QAAO,qBAAGrB,KAAOC,YAAcxB,IAA0B6C,SAASJ,OAElF,IAAMK,EAAoBxB,EAAMyB,OAG1BvC,EAA6B,CACjCwC,QAAU,EACV3B,MAAOyB,EACPG,UALwBH,EAAaI,KAAKC,KAAKL,ECpBX,GDoB2C,EAAK,GAQtF,OACE,kBAAC,IAAD,KACE,kBAACM,EAAD,CAAc7C,SAAUe,EAAOd,SAAUA,EAAUR,IAAKyC,SAK9Db,EAAiByB,YAAc,mBAEhBzB,gBAEF0B,EAAY","file":"component---src-templates-post-list-template-tsx-165b166f2554c97dc129.js","sourcesContent":["export enum TagName {\n  JAVASCRIPT = 'JavaScript',\n  REACT = 'React',\n  DOCKER = 'Docker',\n  GRAPHQL = 'GraphQL'\n}\n\n\nexport const converText = (value: string) => {\n\n  let result: string = \"\";\n\n  switch (value.toLocaleLowerCase()) {\n    case \"javascript\":\n      result = TagName.JAVASCRIPT;\n      break;\n    case \"react\":\n      result = TagName.REACT;\n      break;\n    case \"docker\":\n      result = TagName.DOCKER;\n      break;\n    case \"graphql\":\n      result = TagName.GRAPHQL;\n      break;\n    default:\n      result = value;\n      break;\n  }\n\n  return result;\n};\n","import React from 'react';\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport {AiFillTags} from 'react-icons/ai'\n\ntype TagListType = {\n  tags : Array<string>\n}\n\nfunction PostTagListComp({tags}:TagListType) {\n    return (\n        <TagBox>\n            {tags && <AiFillTags/>}\n            {tags.map(tag => {\n              const url = \"/post?tag=\" + tag;\n              return (\n                <Link to={url} key={tag}>\n                  {tag}\n                </Link>\n              );\n            })}\n        </TagBox>\n    );\n}\n\nexport default PostTagListComp;\n\nconst TagBox = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: left;\n    border-top:1px solid #d4d4d5;\n    padding:20px;\n    \n    a {\n      color:black;\n      font-size:0.7rem;\n      font-weight: bold;\n      padding: 0 7px;\n      margin:0 5px;\n      border-radius: 5px;\n      background-color: #d4d4d5;\n    }\n`;\n","import React from 'react';\nimport { nodeType, PostListInfoType } from \"../../interface\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport { converText } from \"../../utils/convertText\"\nimport PostTagListComp from \"./PostTagListComp\"\n\ntype PostListProps = {\n  postData: Array<nodeType>\n  listInfo: PostListInfoType\n  tag? : string\n};\n\nconst PostList = ({postData, listInfo, tag}: PostListProps) => {\n\n  const listTitle = converText(tag);\n\n  return (\n    <ContentWrap>\n      <PostListWrap>\n        <div className=\"tagTitle\">{listTitle}</div>\n        <div className=\"postCount\">{listInfo.count} post</div>\n        <ul>\n          {postData.map((edges) => {\n            const {postUrl, title, tag, date} = edges.node.frontmatter;\n\n            return (\n              <li key={title}>\n                <div className=\"box-title\">\n                  <Link to={postUrl}>{title}</Link>\n                  <p>{date}</p>\n                </div>\n                <PostTagListComp tags={tag}/>\n              </li>\n            );\n          })}\n        </ul>\n      </PostListWrap>\n    </ContentWrap>\n  );\n};\n\nexport default PostList;\n\nconst ContentWrap = styled.div`\n  display: flex;\n`;\n\nconst PostListWrap = styled.div`\n  width: 740px;\n  padding:50px 0;\n  \n  .tagTitle {\n    padding: 10px 10px;\n    font-weight: bold;\n    font-size:1.3rem;\n  }\n  \n  .postCount {\n    padding: 0 10px 10px 10px;\n    font-size:1rem;\n    font-weight: bold;\n    color:#d4d4d5;\n    border-bottom: 0.5px solid #3399ff;\n  }\n  \n  ul {\n    margin:30px 0;\n  }\n  \n  ul li{\n    border: none;\n    border-radius: 5px;\n    box-shadow: 0 1px 3px 0 #d4d4d5, 0 0 0 1px #d4d4d5;\n    transition: box-shadow .1s ease,transform .1s ease;\n    cursor: pointer;\n  }\n  \n  li + li {\n    margin-top: 30px;\n  }\n  \n  li .box-title {\n    padding:20px;\n  }\n\n  li .box-title p{\n    font-size:0.8rem;\n  }\n  \n  li .box-title a{\n    font-size:1.3rem;\n    text-decoration: none;\n    color: black;\n    font-weight: bold;\n  }\n  \n  li .box-title a:hover {\n    color: #3399ff;\n  }\n`;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport { nodeType, PostListInfoType, PostPropsType } from \"../interface\"\nimport { graphql } from 'gatsby';\nimport PostListComp from \"../components/PostList/PostListComp\";\nimport {CONTENT_PER_PAGE} from \"../constants\";\n\nconst PostListTemplate: React.FC<PostPropsType> = React.memo(props => {\n  const {search} = props.location;\n  const paramString: string = search.substring(1);\n  const searchParams:URLSearchParams = new URLSearchParams(paramString);\n\n  let edges = props.data.posts.edges;\n  let _tag: string = \"ALL\";\n\n  if(searchParams.has(\"tag\")){\n    _tag = searchParams.get(\"tag\");\n    edges = edges.filter(({ node: {frontmatter: {tag}}}: nodeType) => (tag.includes(_tag)));\n  }\n  const postCount: number = edges.length;\n  const pageCount: number = postCount ? (Math.ceil(postCount / CONTENT_PER_PAGE) + 1) : 1;\n\n  const listInfo: PostListInfoType = {\n    curPage : 1,\n    count: postCount,\n    pageCount: pageCount\n  }\n\n  return (\n    <Layout>\n      <PostListComp postData={edges} listInfo={listInfo} tag={_tag}/>\n    </Layout>\n  );\n});\n\nPostListTemplate.displayName = 'PostListTemplate';\n\nexport default PostListTemplate;\n\nexport const pageQuery = graphql`\n  query PostListQuery {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    posts: allMarkdownRemark (\n      filter: { frontmatter: { hide: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            type\n            title\n            postUrl\n            tag\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","export const CONTENT_PER_PAGE: number = 8;\nexport const PAGE_PER_SCREEN: number = 4;\n\nexport const POST: string = 'post';\nexport const TECH: string = 'tech';\nexport const PORTFOLIO: string = 'portfolio';\nexport const RESUME: string = 'resume';\n\n// Site Information\nexport const NAME: string = '2Paradise Blog';\nexport const TITLE: string = '2Paradise Blog';\nexport const PREFIX: string = '2Paradise | ';\nexport const DESCRIPTION: string = 'I always want to be a respected developer.';\nexport const AUTHOR: string = '2Paradise';\nexport const EMAIL: string = 'robinnwpa@gmail.com';\nexport const KEYWORDS = [\n  'Gatsby',\n  'ReactJS',\n].join(', ');\nexport const SITE_URL: string = 'https://2Paradise.github.io';\nexport const PROFILE: string = 'https://avatars0.githubusercontent.com/u/65708679?s=460&u=6f2003c81185fbe1d98b89816a353f18c09b8dd5&v=4';\n\n// Social\nexport const GITHUB_ID: string = '2Paradise';\nexport const TWITTER_ID: string = '';\nexport const FACEBOOK_ID: string = 'robinnw';\nexport const LINKEDIN_ID: string = '';\n\n// Disqus (Recommend you to use this)\nexport const DISQUS_ID: string = '2Paradise';\n"],"sourceRoot":""}