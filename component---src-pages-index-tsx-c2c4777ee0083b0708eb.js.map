{"version":3,"sources":["webpack:///./src/components/home/HomeMainComp.tsx","webpack:///./src/components/home/GuideTitleComp.tsx","webpack:///./src/components/home/GuideItemComp.tsx","webpack:///./src/components/home/GuideListComp.tsx","webpack:///./src/components/home/HomeSectionComp.tsx","webpack:///./src/query/use-graphql.ts","webpack:///./src/pages/index.tsx"],"names":["HomeMainComp","React","createElement","HomeWrap","ContentWrap","className","src","autoPlay","muted","loop","styled","section","div","GuideTitleComp","_ref","cate","cateObj","COMMONT_CATE","GuideTitleWrap","color","COMMON_COLORS","black","GuideTitleBox","icon","toLocaleUpperCase","props","GuideItemComp","idx","edge","slug","node","fields","title","frontmatter","GuideItem","Link","to","li","GuideListComp","GuideListWrap","GuideList","StaticQuery","query","render","data","edges","allMarkdownRemark","filter","map","key","memo","ul","HomeSectionComp","cates","useCateList","useStaticQuery","result","includes","push","Fragment","BoxTitle","BoxWrap","p","IndexPage","Layout","isWide","SectionWrap"],"mappings":"mJAkBeA,MAfgBA,IAEzBC,IAAAC,cAACC,EAAQ,KACPF,IAAAC,cAACE,EAAW,KACVH,IAAAC,cAAA,KAAGG,UAAU,YAAW,YACbJ,IAAAC,cAAA,WAAM,oBAEjBD,IAAAC,cAAA,OAAKG,UAAU,eACbJ,IAAAC,cAAA,SAAOI,IAAK,qBAAsBC,UAAQ,EAACC,OAAK,EAACC,MAAI,OASjE,MAAMN,EAAWO,IAAOC,OAAQ;;;;EAM1BP,EAAcM,IAAOE,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCCHhBC,MAfsCC,IAAY,IAAX,KAACC,GAAKD,EAG1D,MAAME,EAAUC,IAAaF,GAE7B,OACEd,IAAAC,cAACgB,EAAc,CAACC,MAAOC,IAAcC,OACnCpB,IAAAC,cAACoB,EAAa,KACZrB,IAAAC,cAAA,OAAKI,IAAKU,EAAQO,OAClBtB,IAAAC,cAAA,KAAGG,UAAW,YAAaU,EAAOA,EAAKS,oBAAsBT,MAQrE,MAAMG,EAAiBR,IAAOE,GAAI;;wBAETa,GAAeA,EAAMN;;EAIxCG,EAAgBZ,IAAOE,GAAI;;;;;;;;;;;;;;;;;;;;;ECLlBc,MAf+BZ,IAAkB,IAAjB,IAACa,EAAG,KAAEC,GAAMd,EAEzD,MAAM,KAACe,GAAQD,EAAKE,KAAKC,QACnB,MAACC,EAAK,KAAEjB,GAAQa,EAAKE,KAAKG,YAG1BjB,EAAUC,IAAaF,GAE7B,OACEd,IAAAC,cAACgC,EAAS,CAACf,MAAOH,EAAQG,OACxBlB,IAAAC,cAAA,YAAOyB,EAAM,EAAE,MAAS1B,IAAAC,cAACiC,OAAI,CAACC,GAAIP,GAAOG,KAO/C,MAAME,EAAYxB,IAAO2B,EAAG;;;;aAIdZ,GAAeA,EAAMN;;;;;;;;iBAQjBM,GAAeA,EAAMN;;;;EC9BjCmB,EAA8CxB,IAAY,IAAX,KAACC,GAAKD,EAEzD,OACEb,IAAAC,cAACqC,EAAa,KACZtC,IAAAC,cAACsC,EAAS,KACRvC,IAAAC,cAACuC,cAAW,CAACC,MAAK,aAkBfC,OAAQC,IACT,MAAM,MAACC,GAASD,EAAKE,kBAErB,OADsBD,EAAME,OAAQnB,GAAcA,EAAKE,KAAKG,YAAYlB,OAASA,GACnEiC,IAAI,CAACpB,EAAMD,IAAS1B,IAAAC,cAACwB,EAAa,CAACuB,IAAKtB,EAAKA,IAAKA,EAAKC,KAAMA,WAQtE3B,UAAMiD,KAAKZ,GAE1B,MAAMC,EAAgB7B,IAAOE,GAAI;;;EAK3B4B,EAAY9B,IAAOyC,EAAG;;;;;;;;;;ECrBbC,MAvBkBA,KAE/B,MAAMC,ECNoBC,MAC1B,MAAMV,EAAyBW,yBAAe,cAgBxCC,EAAuB,IACvB,MAACX,GAASD,EAAKE,kBAOrB,OALAD,EAAMG,IAAKpB,IACT,MAAM,KAACb,GAAQa,EAAKE,KAAKG,YACtBlB,IAAOyC,EAAOC,SAAS1C,IAASyC,EAAOE,KAAK3C,KAG1CyC,GDnB4BF,GAEnC,OACErD,IAAAC,cAAAD,IAAA0D,SAAA,KACI1D,IAAAC,cAAC0D,EAAQ,KAAC,aACV3D,IAAAC,cAAC2D,EAAO,CAACxD,UAAW,aAAcc,MAAOC,IAAcC,OAEnDgC,EAAML,IAAI,CAACjC,EAAMY,IAEb1B,IAAAC,cAAA,OAAKG,UAAW,SAAU4C,IAAKtB,GAC7B1B,IAAAC,cAACW,EAAc,CAACE,KAAMA,IACtBd,IAAAC,cAACoC,EAAa,CAACvB,KAAMA,SAYvC,MAAM6C,EAAWlD,IAAOoD,CAAE;;;;;;EAQpBD,EAAUnD,IAAOE,GAAI;;;;6BAIGa,GAAeA,EAAMN;;;;;;;;;;;;;;;;;;EEzBpC4C,UAXoBA,IAE/B9D,IAAAC,cAAC8D,IAAM,CAACC,QAAM,GACZhE,IAAAC,cAACF,EAAY,MACbC,IAAAC,cAACgE,EAAW,KACVjE,IAAAC,cAACkD,EAAe,QAQxB,MAAMc,EAAcxD,IAAOC,OAAQ","file":"component---src-pages-index-tsx-c2c4777ee0083b0708eb.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\"\n\nconst HomeMainComp: React.FC = () => {\n    return (\n      <HomeWrap>\n        <ContentWrap>\n          <p className=\"___title\">\n            2Paradise<br />Engineering Blog\n          </p>\n          <div className=\"___videobox\">\n            <video src={\"/videoplayback.mp4\"} autoPlay muted loop />\n          </div>\n        </ContentWrap>\n      </HomeWrap>\n    );\n}\n\nexport default HomeMainComp;\n\nconst HomeWrap = styled.section`\n  position: relative;\n  background-color: black;\n  z-index: -2;\n`;\n\nconst ContentWrap = styled.div`\n  max-width: 1300px;\n  margin: 0 auto;\n\n  & .___title{\n    text-align: left;\n    font-weight: bold;\n    color:#ffffff;\n    font-size:5rem;\n    line-height: 1.2em;\n    padding:300px 0;\n  }\n\n  & .___videobox {\n    position: absolute;\n    right: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    opacity: 0.7;\n    z-index: -1;\n\n    video {\n      width: 100%;\n    }\n  }\n  \n  @media only screen and (max-width: 992px) {\n      & .___videobox {\n        width: 100%;\n        height: 100%;\n        video {\n          position: absolute;\n          top: 0;\n          left: 0;\n          height: 100%;\n          object-fit: cover;\n        }\n      }\n  }\n`;\n","import React from 'react';\nimport styled from \"styled-components\"\nimport { COMMON_COLORS, COMMONT_CATE } from \"../../constants\"\n\ntype guideTitleCompType = {\n  cate: string | null\n}\n\nconst GuideTitleComp: React.FC<guideTitleCompType> = ({cate}) => {\n\n  // @ts-ignore\n  const cateObj = COMMONT_CATE[cate];\n\n  return (\n    <GuideTitleWrap color={COMMON_COLORS.black}>\n      <GuideTitleBox>\n        <img src={cateObj.icon}/>\n        <p className={\"___title\"}>{cate ? cate.toLocaleUpperCase() : cate}</p>\n      </GuideTitleBox>\n    </GuideTitleWrap>\n  );\n}\n\nexport default GuideTitleComp;\n\nconst GuideTitleWrap = styled.div`\n    color: #ffffff;\n    background-color: ${(props: any) => props.color};\n    flex: 1;\n`;\n\nconst GuideTitleBox = styled.div`\n  padding: 20px 20px;\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  \n  img {\n    margin: 0;\n    margin-right: 10px;\n    width: 30px;\n  }\n  \n  p {\n    margin: 0\n  }\n  \n  .___title {\n    font-size: 1.3rem;\n    font-weight: bold;  \n  }\n  \n`;\n","import React from 'react';\nimport { cateObjectType, Edge } from \"../../types\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { COMMONT_CATE } from \"../../constants\"\n\ntype GuideItemType = {\n  idx: number\n  edge: Edge\n};\n\nconst GuideItemComp:React.FC<GuideItemType> = ({idx, edge }) => {\n\n  const {slug} = edge.node.fields;\n  const {title, cate} = edge.node.frontmatter;\n\n  // @ts-ignore\n  const cateObj = COMMONT_CATE[cate];\n\n  return (\n    <GuideItem color={cateObj.color}>\n      <span>{idx + 1}. </span><Link to={slug}>{title}</Link>\n    </GuideItem>\n  );\n}\n\nexport default GuideItemComp;\n\nconst GuideItem = styled.li`\n  span {\n    font-size:1.2rem;\n    font-width: bold;\n    color: ${(props:any ) => props.color};\n  }\n  \n  a {\n      color:#2d2d2d;\n      text-decoration: none;\n      \n      &:hover {\n        color: ${(props:any ) => props.color};\n      }\n  }\n  \n`;\n\n","import React from 'react';\nimport styled from \"styled-components\";\nimport { Edges, Edge } from \"../../types\";\nimport { graphql, StaticQuery } from \"gatsby\";\nimport GuideItemComp from \"./GuideItemComp\";\n\ntype GuideTitleCompType = {\n  cate: string | null\n}\n\nconst GuideListComp: React.FC<GuideTitleCompType> = ({cate}) => {\n\n  return (\n    <GuideListWrap>\n      <GuideList>\n        <StaticQuery query={graphql`\n          query GuideListQuery {\n            allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}) {\n              edges {\n                node {\n                  frontmatter {\n                    hide\n                    type\n                    title\n                    cate\n                  }\n                  fields {\n                    slug\n                  }\n                }\n              }\n            }\n          }\n        `} render={data => {\n          const {edges} = data.allMarkdownRemark;\n          const result: Edges = edges.filter((edge: any) => edge.node.frontmatter.cate === cate);\n          return result.map((edge, idx) => (<GuideItemComp key={idx} idx={idx} edge={edge}/>));\n        }}\n        />\n      </GuideList>\n    </GuideListWrap>\n);\n}\n\nexport default React.memo(GuideListComp);\n\nconst GuideListWrap = styled.div`\n  flex: 3;\n  background-color: #ffffff;\n`;\n\nconst GuideList = styled.ul`\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n\n    padding: 15px 20px;\n  }\n`;\n\n","import React from 'react';\nimport { useCateList } from \"../../query/use-graphql\";\nimport styled from \"styled-components\";\nimport { COMMON_COLORS } from \"../../constants\";\nimport GuideTitleComp from './GuideTitleComp';\nimport GuideListComp from './GuideListComp';\n\nconst HomeSectionComp:React.FC = () => {\n\n  const cates:Array<string | null> = useCateList();\n\n  return (\n    <>\n        <BoxTitle>POST LIST</BoxTitle>\n        <BoxWrap className={\"___boxwrap\"} color={COMMON_COLORS.black}>\n          {\n            cates.map((cate, idx) => {\n              return (\n                <div className={\"___box\"} key={idx}>\n                  <GuideTitleComp cate={cate}/>\n                  <GuideListComp cate={cate}/>\n                </div>\n              )\n            })\n          }\n        </BoxWrap>\n      </>\n    );\n}\n\nexport default HomeSectionComp;\n\nconst BoxTitle = styled.p`\n    font-size: 3rem;\n    font-weight: bold;\n    text-align: left;\n    margin: 100px 60px 60px 0;\n    padding-left: 20px;\n`;\n\nconst BoxWrap = styled.div`\n\n  justify-content: center;\n  border-radius: 10px;\n  box-shadow: 5px 5px 20px ${(props: any) => props.color};\n\n  flex-wrap: wrap;\n \n  .___box{\n      display: flex;\n  }\n  \n  .___box + .___box {\n      border-top: 1px solid #2d2d2d;\n  }\n\n  @media only screen and (max-width: 992px) {\n    .___box{\n        display: block;\n    }\n  }\n\n`;\n\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport { AllMarkdownRemark } from \"../types\"\n\nexport const useCateList =  () => {\n  const data:AllMarkdownRemark = useStaticQuery(\n    graphql`\n       query CateQuery {\n        allMarkdownRemark {\n          edges {\n            node {\n              frontmatter {\n                cate\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const result:Array<string> = [];\n  const {edges} = data.allMarkdownRemark;\n\n  edges.map((edge) => {\n    const {cate} = edge.node.frontmatter;\n    if(cate) !result.includes(cate) && result.push(cate);\n  });\n\n  return result;\n};\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport styled from \"styled-components\";\nimport { Edges } from \"../types\"\nimport HomeMainComp from \"../components/home/HomeMainComp\"\nimport HomeSectionComp from \"../components/home/HomeSectionComp\"\n\nconst IndexPage: React.FC<Edges> = () => {\n  return (\n    <Layout isWide>\n      <HomeMainComp />\n      <SectionWrap>\n        <HomeSectionComp/>\n      </SectionWrap>\n    </Layout>\n  )\n};\n\nexport default IndexPage;\n\nconst SectionWrap = styled.section`\n  max-width: 1300px;\n  margin: 40px auto;\n`;\n\n"],"sourceRoot":""}