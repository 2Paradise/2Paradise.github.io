{"componentChunkName":"component---src-templates-post-template-tsx","path":"/post/2020-06-23-javascript-prototype","result":{"data":{"site":{"siteMetadata":{"title":"2Paradise Develop Note","author":"@2Paradise"}},"post":{"html":"<h1>Prototype</h1>\n<p>자바 스크립트는 프로토타입 기반의 언어이다. 프로토타입이 자바스트립트 그 자체이기 때문에 집고 넘어갈 필요가 있다.</p>\n<p>객체 생성자</p>\n<p> 객체 생성자는 함수를 통해 새로운 객체를 만들고 그 안에 넣고 싶은 값 또는 함수를 구현할 수 있게 해준다. 대문자로 시작하며 new 선언으로 생성 할 수 있다.</p>\n<pre><code class=\"language-javascript\">function Animal(type, name, sound) {\n  this.type = type;\n  this.name = name;\n  this.sound = sound;\n  this.say = function() {\n    console.log(this.sound);\n  };\n}\n\nAnimal.prototype.nameSay = function() {\n  console.log(this.sound);\n};\n\nconst dog = new Animal(\"개\", \"잭슨\", \"멍멍\");\nconst cat = new Animal(\"고양이\", \"야옹이\", \"야옹\");\n\ndog.say();\ncat.say();\n\ndog.nameSay();\ncat.nameSay();\n</code></pre>\n<p>객체 생성자를 상속받아 보자.</p>\n<pre><code class=\"language-javascript\">function Animal(type, name, sound) {\n  this.type = type;\n  this.name = name;\n  this.sound = sound;\n}\n\nAnimal.prototype.say = function() {\n  console.log(this.sound);\n};\n\nfunction Dog(name, sound) {\n  Animal.call(this, \"개\", name, sound);\n}\n\nfunction Cat(name, sound) {\n  Animal.call(this, \"고양이\", name, sound);\n}\n\nDog.prototype = Animal.prototype;\nCat.prototype = Animal.prototype;\n\nconst dog = new Dog(\"잭슨\", \"멍멍\");\nconst cat = new Cat(\"야옹이\", \"야옹\");\n\ndog.say();\ncat.say();\n</code></pre>\n<p><code>call</code> 함수와 부모 자식간의 프로토타입이 같다는 코드 추가로 상속관계를 형성 할 수 있다.</p>\n<p> 위와 같은 형식은 ES6 이전 Class가 생기기 전에 사용하던 방식이다.</p>\n<h1>Class</h1>\n<pre><code class=\"language-javascript\">class Animal {\n  constructor(type, name, sound) {\n    this.type = type;\n    this.name = name;\n    this.sound = sound;\n  }\n\n  say() {\n    console.log(this.sound);\n  }\n}\n\nclass Dog extends Animal {\n  constructor(name, sound) {\n    super(\"개\", name, sound);\n  }\n}\n\nclass Cat extends Animal {\n  constructor(name, sound) {\n    super(\"고양이\", name, sound);\n  }\n}\n\nconst dog = new Dog(\"멍멍이\", \"멍멍\");\nconst cat = new Cat(\"야옹이\", \"야옹\");\n\ndog.say();\ncat.say();\n</code></pre>","frontmatter":{"type":"post","title":"JavaScript 프로토타입과 클래스","postUrl":"/post/2020-06-23-javascript-prototype","tag":["javascript","자바스크립트","ES6"],"date":"2020-06-23","desc":"자바 스크립트는 프로토타입 기반의 언어이다. 프로토타입이 자바스트립트 그 자체이기 때문에 집고 넘어갈 필요가 있다. 객체 생성자는 함수를 통해 새로운 객체를 만들고 그 안에 넣고 싶은 값 또는 함수를 구현할 수 있게 해준다. 대문자로 시작하며 new 선언으로 생성 할 수 있다."}}},"pageContext":{}},"staticQueryHashes":[]}