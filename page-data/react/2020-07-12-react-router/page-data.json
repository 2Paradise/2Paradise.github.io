{"componentChunkName":"component---src-templates-post-template-tsx","path":"/react/2020-07-12-react-router/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Default Starter","author":"@gatsbyjs"}},"post":{"fields":{"slug":"/react/2020-07-12-react-router/"},"frontmatter":{"title":"React Router","hide":false,"type":"post","date":"2020-07-12","desc":"라우팅을 클라이언트가 담당하게 된다. 라우팅은 어떤 주소에 어떤 UI를 보여줄지 정하는 것을 말한다. 보통은 서버에서 처리했지만 SPA에서는 클라이언트가 담당하게 된다.사용자가 특정 페이지에 이동을 할때 서버에 요청없이 페이지를 보여줄 수 있게 되는 것이다. 동적인 값이 필요할 때는 API 요청을 통해 Json 형식으로 보여주게 된다. 이러한 구조를 통해 얻을 수 있는 이점으로 서버는 자원을 많이 아낄 수 있고 클라이언트 쪽은 더 좋은 사용자 경험을 제공 받을 수 있는 것이다.","tag":["React","Router","SPA"]},"html":"<h2>SPA (Single Page Application)</h2>\n<p> 라우팅을 클라이언트가 담당하게 된다. 라우팅은 어떤 주소에 어떤 UI를 보여줄지 정하는 것을 말한다. 보통은 서버에서 처리했지만 SPA에서는 클라이언트가 담당하게 된다. </p>\n<p> 사용자가 특정 페이지에 이동을 할때 서버에 요청없이 페이지를 보여줄 수 있게 되는 것이다. 동적인 값이 필요할 때는 API 요청을 통해 Json 형식으로 보여주게 된다. 이러한 구조를 통해 얻을 수 있는 이점으로 서버는 자원을 많이 아낄 수 있고 클라이언트 쪽은 더 좋은 사용자 경험을 제공 받을 수 있는 것이다. </p>\n<p> 앱의 규모가 커질 수록 JS 파일의 크기가 많이 커질 수 있는데 <code class=\"language-text\">Code Splitting</code> 이라는 기술을 통해 해결 할 수 가 있다. 각 기능 별로 파일을 분리 시켜 필요한 시점에 불러오는 것이다. </p>\n<p>브라우저에서 JS 가 구동되지 않으면 UI를 볼 수 없다. 검색엔진에서 크롤링 같은 작업이 불가능 한 것이다. 이러한 문제점은 <code class=\"language-text\">Server Side Rendering</code> 이란 기술을 통해 해결 할 수 가 있다. </p>\n<p>Reat 에서 SPA 를 만들기 위해 많이 사용되는 라이브러리는 React-Router, Next 가 있다.</p>\n<p>React Router</p>\n<ul>\n<li>컴포넌트를 기반으로 라우팅을 한다. 필요한 값을 props로 넣어 랜더링 하는 방식이다.</li>\n</ul>\n<p>JSX</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n\t\t<span class=\"token operator\">&lt;</span>nav<span class=\"token operator\">></span>\n\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\t\n\t<span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Index<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/about/\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>About<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\t\n\t<span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/users/\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Users<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\t\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Next.js</p>\n<ul>\n<li>서버사이드 렌더링을 쉽게 구현가능하다.</li>\n<li>파일경로와 이름을 기반으로 라우트를 설정한다.</li>\n</ul>\n<p>// pages/index.js</p>\n<p>// pages/About.js</p>\n<p>리액트에서 사용되는 주요 컴포넌트를 살펴 보자.</p>\n<p>참고 Site <a href=\"https://reactrouter.com/core/guides/philosophy\">React Tranning - react router</a> </p>\n<h2>1. BrowserRouter</h2>\n<p>HTML5 History API를 사용하여 브라우저의 주소표시줄 경로를 바꿔 줄 수 있는데 바꿀때 서버 요청없이 브라우저에서 주소만 바꾸는 것이 가능하다. </p>\n<h2>2. HashRouter</h2>\n<p>주소뒤에 #를 넣는 방식이다. 옛날 브라우저에서도 작동한다.</p>\n<p>example.com/#/path/to/route</p>\n<h2>3. MemoryRouter</h2>\n<p>브라우저의 주소와 무관하며 일체 건드리지 않기 때문에 브라우저가 아닌 환경에서 사용되기 좋다. 임베디드 웹앱, 리액트 네이티브 등에서 사용된다. 특정 페이지 일부를 react로 구현하여 사용하고 싶을 경우 유용하다.</p>\n<h2>4. StaticRouter</h2>\n<p>서버사이드 렌더링에서 사용하는 용도</p>\n<h2>5. Route</h2>\n<p>라우트를 정의할 때 사용하는 컴포넌트이다. </p>\n<h2>6. Link</h2>\n<p>a태그로 구성되어 있지만 새로고침이 되지 않는다. 사용한 Roter의 주소를 바꿔 준다. </p>\n<h2>Parameter &#x26; Query</h2>\n<p>URL Parameter</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/profiles/:username\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Profile<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> profileData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    raccoon <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        name <span class=\"token operator\">:</span> <span class=\"token string\">'이낙원'</span><span class=\"token punctuation\">,</span>\n        discription <span class=\"token operator\">:</span> <span class=\"token string\">'낙낙코딩'</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">,</span> velopert <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        name <span class=\"token operator\">:</span> <span class=\"token string\">'김민준'</span><span class=\"token punctuation\">,</span>\n        discription <span class=\"token operator\">:</span> <span class=\"token string\">'Front Engineer @RIDI'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Profile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>match<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> match<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> profile <span class=\"token operator\">=</span> profileData<span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>profile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>존재하지 않는다<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>profile<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span>profile<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Profile<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Query</p>\n<p>props로 전달되는 location 을 통해 query 정보를 가져 올 수 있으며 qs 라이브러리를 사용하여 편리하게 추출 가능하다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">$ yarn add qs</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> qs <span class=\"token keyword\">from</span> <span class=\"token string\">'qs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">About</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> qs<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        ignoreQueryPrefix<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> detail <span class=\"token operator\">=</span> query<span class=\"token punctuation\">.</span>detail <span class=\"token operator\">===</span> <span class=\"token string\">'true'</span><span class=\"token punctuation\">;</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>소개<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n                이 프로젝트는 리액트 라우터 기초를 실습해보는 예제 프로젝트 입니다<span class=\"token punctuation\">.</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n            <span class=\"token punctuation\">{</span>detail <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>detail 값이 <span class=\"token boolean\">true</span> 입니다<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> About<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>React Router 부가기능</h1>\n<h2>History 객체</h2>\n<p>라우트로 사용되는 컴포넌트에 props로 전달된다. 이 객체를 사용하여 컴포넌트에서 라우터에 직접적인 접근이 가능하다. 특정 함수를 호출 했을 때 특정 경로로 이동하거나 뒤로가거나 페이지 이탈을 방지할 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>useEffect<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HistorySample</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">goBack</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        history<span class=\"token punctuation\">.</span><span class=\"token function\">goBack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">goHome</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">replaceToHome</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        history<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">//페이지 이탈 방지</span>\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> unblock <span class=\"token operator\">=</span> history<span class=\"token punctuation\">.</span><span class=\"token function\">block</span><span class=\"token punctuation\">(</span><span class=\"token string\">'정말 떠나실건가요?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">unblock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>history<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>goBack<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>뒤로가기<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>goHome<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>홈으로<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>replaceToHome<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token function\">홈으로</span> <span class=\"token punctuation\">(</span>Replace<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> HistorySample<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>withRouter</h2>\n<p> 라우터 컴포넌트가 아닌곳에서 <code class=\"language-text\">match</code> , <code class=\"language-text\">location</code> , <code class=\"language-text\">history</code> 를 props로 받아 사용 할 수 있게 해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>withRouter<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">WithRouterSample</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">,</span> match<span class=\"token punctuation\">,</span> history<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>h4<span class=\"token operator\">></span>location<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h4<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>textarea value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> readOnly<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>h4<span class=\"token operator\">></span>Match<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h4<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>textarea value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> readOnly<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>홈으로<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>WithRouterSample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>route로 사용되지 않은 컴포넌트에서 조건부로 이동해야 할 경우 주로 사용된다. </p>\n<h2>Switch</h2>\n<p> 여러가지 라우트 중에 가장 먼저 매칭된 라우트 만을 보여준다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>홈<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/about\"</span><span class=\"token operator\">></span>소개<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/profiles\"</span><span class=\"token operator\">></span>프로필 목록<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/history\"</span><span class=\"token operator\">></span>예제<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>hr<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Home<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/about\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>About<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/profiles\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Profiles<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/history\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>HistorySample<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>이페이지는 존제하지 않습니다<span class=\"token punctuation\">.</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>NavLink</h2>\n<p> 링크와 비슷하다. 해당 링크 주소와 현재 브라우저의 주소와 일치한다면 특별한 스타일을 지정해 줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Profile <span class=\"token keyword\">from</span> <span class=\"token string\">'./Profile'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>NavLink<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Profiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span>사용자 목록<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>NavLink\n                        to<span class=\"token operator\">=</span><span class=\"token string\">\"/profiles/raccoon\"</span>\n                        activeStyle<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> background<span class=\"token operator\">:</span><span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span><span class=\"token string\">'white'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\t\t\t\t\t\tactiveClassName<span class=\"token operator\">=</span><span class=\"token string\">\"active\"</span>\n                    <span class=\"token operator\">></span>\n                        Raccoon\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NavLink<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>NavLink\n                        to<span class=\"token operator\">=</span><span class=\"token string\">\"/profiles/velopert\"</span>\n                        activeStyle<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> background<span class=\"token operator\">:</span><span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span><span class=\"token string\">'white'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\t\t\t\t\t\tactiveClassName<span class=\"token operator\">=</span><span class=\"token string\">\"active\"</span>\n                    <span class=\"token operator\">></span>\n                        Velopert\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NavLink<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n\n            <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/profiles\"</span> exact render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>사용자를 선택해 주세요<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/profiles/:username\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Profile<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Profiles<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>useReactRouterHook 사용하기</h2>\n<p>useReactRouter Hook 을 사용하여 withRouter 를 이용하지 않아도 router 관련 porps를 가져올 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">$ yarn add use<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>router</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> useReactRouter <span class=\"token keyword\">from</span> <span class=\"token string\">'use-react-router'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">RouterHookSample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> match<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReactRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> match<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> RouterHookSample<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","id":"ab28b485-8cea-57a9-b1ad-aff87549c320"}},"pageContext":{}},"staticQueryHashes":["3649515864","405191750"]}