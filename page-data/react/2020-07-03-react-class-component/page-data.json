{"componentChunkName":"component---src-templates-post-template-tsx","path":"/react/2020-07-03-react-class-component/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Default Starter","author":"@gatsbyjs"}},"post":{"fields":{"slug":"/react/2020-07-03-react-class-component/"},"frontmatter":{"title":"Class 형 컴포넌트","hide":false,"type":"post","date":"2020-07-03","desc":"요즘 잘 사용하지 않지만 알아 둘 필요가 있다. 함수형 컴포넌트와 Hook으로 못하는 작업이 한 두가지 정도가 있다. 예전엔 class 형으로 만들었지만 지금은 hook으로 상태관리가 가능하기 때문에 함수형 컴포넌트가 주로 사용되고 있다.","tag":["React","Class Component"]},"html":"<p>요즘 잘 사용하지 않지만 알아 둘 필요가 있다. 함수형 컴포넌트와 Hook으로 못하는 작업이 한 두가지 정도가 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Component<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./App.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        name <span class=\"token operator\">:</span> <span class=\"token string\">'이름 없음'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>color<span class=\"token punctuation\">,</span> isSpecial<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>color<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span>isSpecial <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>b<span class=\"token operator\">></span><span class=\"token operator\">*</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>b<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n                안녕하세요<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>예전엔 class 형으로 만들었지만 지금은 hook으로 상태관리가 가능하기 때문에 함수형 컴포넌트가 주로 사용되고 있다. </p>\n<h2>LifeCycle Method</h2>\n<p>생명주기 메서드. 클래스형 컴포넌트에서만 사용할 수 있다. useEffect와 유사하다고 볼 수 있다. 이 개념에 대해 많은 시간을 쏟을 필요는 없다. 다만 어떤 것들이 있는지만 알아 두고 <a href=\"https://ko.reactjs.org/docs/state-and-lifecycle.html\">메뉴얼</a>을 통해 알아볼 수 있는 정도만 학습하면 된다.</p>","id":"69003a0d-890f-5f18-994b-39f92a1384e3"}},"pageContext":{}},"staticQueryHashes":["3649515864","405191750"]}