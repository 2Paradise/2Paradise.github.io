{"componentChunkName":"component---src-templates-post-template-tsx","path":"/typescript/2020-08-01-TypeScript-for-React-Project/","result":{"data":{"site":{"siteMetadata":{"title":"2P Enginnering Blog","author":"@2Paradise"}},"post":{"fields":{"slug":"/typescript/2020-08-01-TypeScript-for-React-Project/"},"frontmatter":{"title":"TypeScript for React Project","hide":false,"type":"post","date":"2020-08-01","desc":"typescript 를 접하면서 생소 했던 부분들은 집고 넘어가자. 클래스 또는 객체를 지정할 때 사용 되는 문법이다. age`?` 로 표기한 것은 해당 값이 있을 수도 있고 없을 수도 있다는 의미를 나타낸다. type alias를 이용하여 같은 작업을 할 수도 있다.","tag":["Typescript","React","Reducer","ContextAPI"]},"html":"<p>TypeScript 한글 문서</p>\n<p><a href=\"https://typescript-kr.github.io/\">https://typescript-kr.github.io/</a></p>\n<p>typescript 를 접하면서 생소 했던 부분들은 집고 넘어가자.</p>\n<h2>Interface &#x26; Type Alias</h2>\n<p>클래스 또는 객체를 지정할 때 사용 되는 문법이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Shape</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Circle</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Shape</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">public</span> radius<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>radius <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>radius <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rectangle</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Shape</span> <span class=\"token punctuation\">{</span>\n    width<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    height<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">width<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> circle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rectangle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> shapes<span class=\"token operator\">:</span> Shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>circle<span class=\"token punctuation\">,</span> rectangle<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nshapes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">shape</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>객체 타입을 지정하는 interface를 살펴보자. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    age<span class=\"token operator\">?</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Developer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">{</span>\n    skills<span class=\"token operator\">:</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> person<span class=\"token operator\">:</span> Person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'aaaaaa'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> expert<span class=\"token operator\">:</span> Developer <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'이사람'</span><span class=\"token punctuation\">,</span>\n    skills<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tsc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>age<code class=\"language-text\">?</code> 로 표기한 것은 해당 값이 있을 수도 있고 없을 수도 있다는 의미를 나타낸다. type alias를 이용하여 같은 작업을 할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">type Person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    age<span class=\"token operator\">?</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ntype Developer <span class=\"token operator\">=</span> Person <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>\n    skills<span class=\"token operator\">:</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> person<span class=\"token operator\">:</span> Person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'aaaaaa'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> expert<span class=\"token operator\">:</span> Developer <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'이사람'</span><span class=\"token punctuation\">,</span>\n    skills<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tsc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\ntype People <span class=\"token operator\">=</span> Person<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> people<span class=\"token operator\">:</span> People <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>person<span class=\"token punctuation\">,</span> expert<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\ntype Color <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> color<span class=\"token operator\">:</span> Color <span class=\"token operator\">=</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>라이브러리를 위한 타입을 설정할 경우에는 인터페이스를 권장하며 어떤 것을 쓰던 일관성 있게 쓰는 것이 좋다.</p>\n<h2>Generics <code class=\"language-text\">&lt;T&gt;</code></h2>\n<p>함수, 클래스, 인터페이스, 타입 알리아스를 사용하게 될 때 여러 종류의 타입에 대하여 호환을 맞추는 문법이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> merge<span class=\"token operator\">&lt;</span><span class=\"token constant\">T1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">T2</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token constant\">T1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token constant\">T2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>a<span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span>b\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> merged <span class=\"token operator\">=</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>foo<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>bar<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> wrap<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>param<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        param\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> wrapped <span class=\"token operator\">=</span> <span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Items</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">V</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    list<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    value<span class=\"token operator\">:</span> <span class=\"token constant\">V</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> items<span class=\"token operator\">:</span> Items<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> number<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    list<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    value<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> itemNum<span class=\"token operator\">:</span> Items<span class=\"token operator\">&lt;</span>number<span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    list<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    value<span class=\"token operator\">:</span> <span class=\"token string\">'1'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>React 프로젝트를 만들어보자. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">$ npx creat<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>app <span class=\"token string\">'프로젝트명'</span> <span class=\"token operator\">--</span>typescript</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><a href=\"http://react.App\">React.App</a> 프로젝트에서는 타입스크립트 설정을 제공하기 때문에 일반적으로 그냥 사용해도 무관하다. </p>\n<h2>상태관리 useState</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>useState<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\ntype MyFormProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onSubmit</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">form<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> description<span class=\"token operator\">:</span> string<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyForm</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>onSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> MyFormProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>form<span class=\"token punctuation\">,</span> setForm<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n        description<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">,</span> description<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> form<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ChangeEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span>form<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> value\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleSubmit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FormEvent<span class=\"token operator\">&lt;</span>HTMLFormElement<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">onSubmit</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            name<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n            description<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>input name<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>input name<span class=\"token operator\">=</span><span class=\"token string\">\"description\"</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>description<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"submit\"</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>등록<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MyForm<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>useReducer</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>useReducer<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\ntype Action <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'INCREASE'</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'DECREASE'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token operator\">:</span>number<span class=\"token punctuation\">,</span> action<span class=\"token operator\">:</span> Action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> number<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"INCREASE\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> state <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"DECREASE\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> state <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unhandled action type'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onIncrease</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'INCREASE'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onDecrease</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'DECREASE'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onIncrease<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onDecrease<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Counter<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>ReducerSample.tsx</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>useReducer<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\ntype Color <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\n\ntype State <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  count<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  text<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n  color<span class=\"token operator\">:</span> Color<span class=\"token punctuation\">;</span>\n  isGood<span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ntype Action <span class=\"token operator\">=</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'SET_COUNT'</span><span class=\"token punctuation\">;</span> count<span class=\"token operator\">:</span> number<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'SET_TEXT'</span><span class=\"token punctuation\">;</span> text<span class=\"token operator\">:</span> string<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'SET_COLOR'</span><span class=\"token punctuation\">;</span> color<span class=\"token operator\">:</span> Color<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'TOGGLE_GOOD'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token operator\">:</span> State<span class=\"token punctuation\">,</span> action<span class=\"token operator\">:</span> Action</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> State <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"SET_COUNT\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n                count<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>count\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"SET_TEXT\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n                text<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>text\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"SET_COLOR\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n                color<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>color\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"TOGGLE_GOOD\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n                isGood<span class=\"token operator\">:</span> <span class=\"token operator\">!</span>state<span class=\"token punctuation\">.</span>isGood\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unhandled action type'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ReducerSample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispacth<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        count<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        text<span class=\"token operator\">:</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span>\n        color<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n        isGood<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setCount</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispacth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'SET_COUNT'</span><span class=\"token punctuation\">,</span> count<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setText</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispacth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'SET_TEXT'</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'bye'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispacth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'SET_COLOR'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleGood</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispacth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'TOGGLE_GOOD'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span>count<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span>text<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span>color<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span>isGood<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>isGood <span class=\"token operator\">?</span> <span class=\"token string\">'true'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'false'</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>setCount<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token constant\">SET_COUNT</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>setText<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token constant\">SET_TEXT</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>setColor<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token constant\">SET_COLOR</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleGood<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token constant\">TOGGLE_GOOD</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ReducerSample<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Context API 활용</h2>\n<p>SampleContext.tsx</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>createContext<span class=\"token punctuation\">,</span> Dispatch<span class=\"token punctuation\">,</span> useContext<span class=\"token punctuation\">,</span> useReducer<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\ntype Color <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'orange'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\n\ntype State <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    count<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n    text<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n    color<span class=\"token operator\">:</span> Color<span class=\"token punctuation\">;</span>\n    isGood<span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ntype Action <span class=\"token operator\">=</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'SET_COUNT'</span><span class=\"token punctuation\">;</span> count<span class=\"token operator\">:</span> number<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'SET_TEXT'</span><span class=\"token punctuation\">;</span> text<span class=\"token operator\">:</span> string<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'SET_COLOR'</span><span class=\"token punctuation\">;</span> color<span class=\"token operator\">:</span> Color<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'TOGGLE_GOOD'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token operator\">:</span> State<span class=\"token punctuation\">,</span> action<span class=\"token operator\">:</span> Action</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> State <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"SET_COUNT\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n                count<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>count\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"SET_TEXT\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n                text<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>text\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"SET_COLOR\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n                color<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>color\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"TOGGLE_GOOD\"</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n                isGood<span class=\"token operator\">:</span> <span class=\"token operator\">!</span>state<span class=\"token punctuation\">.</span>isGood\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unhandled action type'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> SampleStateContext <span class=\"token operator\">=</span> createContext<span class=\"token operator\">&lt;</span>State <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> SampleDispatchContext <span class=\"token operator\">=</span> createContext<span class=\"token operator\">&lt;</span>Dispatch<span class=\"token operator\">&lt;</span>Action<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ntype SampleProviderProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    children<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">SampleProvider</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> SampleProviderProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispacth<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        count<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        text<span class=\"token operator\">:</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span>\n        color<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n        isGood<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>SampleStateContext<span class=\"token punctuation\">.</span>Provider value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>SampleDispatchContext<span class=\"token punctuation\">.</span>Provider value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>dispacth<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SampleDispatchContext<span class=\"token punctuation\">.</span>Provider<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SampleStateContext<span class=\"token punctuation\">.</span>Provider<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useSampleState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>SampleStateContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>state<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot find SampleProvider'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useSampleDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> dispatch <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>SampleDispatchContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dispatch<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot find SampleProvider'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> dispatch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","id":"bf09d936-c983-5483-b702-700a1159dab5"}},"pageContext":{}},"staticQueryHashes":["2274161303","405191750"]}