{"componentChunkName":"component---src-templates-post-template-tsx","path":"/javascript/2020-09-22-javascript-truthy-falsy/","result":{"data":{"site":{"siteMetadata":{"title":"2P Enginnering Blog","author":"@2Paradise"}},"post":{"fields":{"slug":"/javascript/2020-09-22-javascript-truthy-falsy/"},"frontmatter":{"title":"Javascript 에서의 true, false","hide":false,"type":"post","date":"2020-09-22","desc":"언어에서의 boolean 타입에 해당하는 `true` `false` 두 가지의 값이 존재한다. 이러한 값들을 진리 값이라고 부르며 프로그래밍에서의 진리 값은 참과 거짓을 나타내기 위해 사용된다. Javascript 에서는 boolean 타입이 와야 하는 자리에 다른 타입의 값이 와도 에러 없이 실행되는 경우가 있다.","tag":["JavaScript","자바스크립트","ES6"]},"html":"<p>언어에서의 boolean 타입에 해당하는 <code class=\"language-text\">true</code> <code class=\"language-text\">false</code> 두 가지의 값이 존재한다. 이러한 값들을 진리 값이라고 부르며 프로그래밍에서의 진리 값은 참과 거짓을 나타내기 위해 사용된다. Javascript 에서는 boolean 타입이 와야 하는 자리에 다른 타입의 값이 와도 에러 없이 실행되는 경우가 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"print truthy value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this console does not print\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>위와 같이 어떠한 값은 <code class=\"language-text\">true</code>, 어떠 값들은 <code class=\"language-text\">false</code> 로 취급 되는데 <code class=\"language-text\">truthy</code>, <code class=\"language-text\">falsy</code> 하다고 부른다. </p>\n<h3>Javascript에서의 falsy한 값</h3>\n<ul>\n<li><code class=\"language-text\">false</code></li>\n<li><code class=\"language-text\">null</code></li>\n<li><code class=\"language-text\">undefined</code></li>\n<li><code class=\"language-text\">0</code>, <code class=\"language-text\">-0</code> (숫자 리터럴)</li>\n<li><code class=\"language-text\">NaN</code></li>\n<li><code class=\"language-text\">&#39;&#39;</code> (빈 문자열)</li>\n</ul>\n<p>🔔 <code class=\"language-text\">NaN</code> 은 자기 자신과 같지 않은 유일한 자료형이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span>\n<span class=\"token boolean\">true</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span>\n<span class=\"token boolean\">true</span>\n<span class=\"token operator\">></span> <span class=\"token number\">NaN</span> <span class=\"token operator\">==</span> <span class=\"token number\">NaN</span>\n<span class=\"token boolean\">false</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>javascript 에서 <code class=\"language-text\">falsy</code> 한 값에 의한 default parameter의 구현을 살펴 보자면</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">callNumber</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">callNumber2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ta <span class=\"token operator\">=</span> a <span class=\"token operator\">||</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">callNumber</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nresult <span class=\"token operator\">=</span> <span class=\"token function\">callNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresult <span class=\"token operator\">=</span> <span class=\"token function\">callNumber2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nresult <span class=\"token operator\">=</span> <span class=\"token function\">callNumber2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>console<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n<span class=\"token number\">0</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">1</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">callNumber</code>, <code class=\"language-text\">callNumber2</code> 두 함수 모두 입력 <code class=\"language-text\">a</code> 의 유효성 체크를 위한 처리가 되어있지만 <code class=\"language-text\">callNumber2</code> 함수의 <code class=\"language-text\">||</code> 연산자에 의한 처리는 <code class=\"language-text\">falsy</code> 한 값 <code class=\"language-text\">0</code>을 <code class=\"language-text\">false</code>로 간주하여 다른 결과가 나오는 것을 확인 할 수 있다.</p>\n<h3>참조</h3>\n<ul>\n<li><a href=\"https://helloworldjavascript.net/pages/150-boolean.html\">JAVASCRIPT로 만나는 세상</a></li>\n</ul>","id":"6f3373e1-ac6e-54a6-869b-4e6c59f11c73"}},"pageContext":{}},"staticQueryHashes":["2274161303","405191750"]}