{"version":3,"sources":["webpack:///./src/components/PostList/index.tsx","webpack:///./src/templates/PostListTemplate.tsx","webpack:///./src/constants/index.ts"],"names":["PostList","postData","listInfo","tag","console","log","ContentWrap","PostListWrap","className","toLocaleUpperCase","count","map","edges","node","frontmatter","postUrl","title","date","key","to","styled","div","PostListTemplate","join","React","memo","props","paramString","location","search","substring","searchParams","URLSearchParams","data","posts","_tag","has","get","filter","includes","postCount","length","curPage","pageCount","Math","ceil","displayName","pageQuery"],"mappings":"ivCAWA,IA8BeA,EA9BE,SAAC,GAA6C,IAA5CC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,IAGrC,OAFAC,QAAQC,IAAI,WAAYJ,GACxBG,QAAQC,IAAI,WAAYH,GAEtB,kBAACI,EAAD,KACE,kBAACC,EAAD,KACE,yBAAKC,UAAU,YAAYL,EAAIM,qBAC/B,yBAAKD,UAAU,aAAaN,EAASQ,MAArC,SACA,4BACGT,EAASU,KAAI,SAACC,GAAU,MACaA,EAAMC,KAAKC,YAAxCC,EADgB,EAChBA,QAASC,EADO,EACPA,MAAOb,EADA,EACAA,IAAKc,EADL,EACKA,KAE5B,OACE,wBAAIC,IAAKF,GACP,yBAAKR,UAAU,aACb,kBAAC,OAAD,CAAMW,GAAIJ,GAAUC,GACpB,2BAAIC,IAEN,yBAAKT,UAAU,WACZL,WAabG,EAAcc,IAAOC,IAAV,KAIXd,EAAea,IAAOC,IAAV,KCxCZC,GCQkB,CACtB,SACA,WACAC,KAAK,MDX2CC,IAAMC,MAAK,SAAAC,GAAS,IAE9DC,EADWD,EAAME,SAAhBC,OAC4BC,UAAU,GACvCC,EAA+B,IAAIC,gBAAgBL,GAErDf,EAAQc,EAAMO,KAAKC,MAAMtB,MACzBuB,EAAe,MAEhBJ,EAAaK,IAAI,SAClBD,EAAOJ,EAAaM,IAAI,OACxBzB,EAAQA,EAAM0B,QAAO,qBAAGzB,KAAOC,YAAcX,IAA0BoC,SAASJ,OAElF,IAAMK,EAAoB5B,EAAM6B,OAG1BvC,EAA6B,CACjCwC,QAAU,EACVhC,MAAO8B,EACPG,UALwBH,EAAaI,KAAKC,KAAKL,ECpBX,GDoB2C,EAAK,GAQtF,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAUvC,SAAUW,EAAOV,SAAUA,EAAUC,IAAKgC,SAK1Db,EAAiBwB,YAAc,mBAEhBxB,gBAEFyB,EAAY","file":"component---src-templates-post-list-template-tsx-1a38b37ea126da238217.js","sourcesContent":["import React from 'react';\nimport { nodeType, PostListInfoType } from \"../../interface\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\ntype PostListProps = {\n  postData: Array<nodeType>\n  listInfo: PostListInfoType\n  tag? : string\n};\n\nconst PostList = ({postData, listInfo, tag}: PostListProps) => {\n  console.log(\"postList\", postData);\n  console.log(\"listInfo\", listInfo);\n  return (\n    <ContentWrap>\n      <PostListWrap>\n        <div className=\"tagTitle\">{tag.toLocaleUpperCase()}</div>\n        <div className=\"postCount\">{listInfo.count} post</div>\n        <ul>\n          {postData.map((edges) => {\n            const {postUrl, title, tag, date} = edges.node.frontmatter;\n\n            return (\n              <li key={title}>\n                <div className=\"box-title\">\n                  <Link to={postUrl}>{title}</Link>\n                  <p>{date}</p>\n                </div>\n                <div className=\"box-tag\">\n                  {tag}\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </PostListWrap>\n    </ContentWrap>\n  );\n};\n\nexport default PostList;\n\nconst ContentWrap = styled.div`\n  display: flex;\n`;\n\nconst PostListWrap = styled.div`\n  width: 800px;\n  padding:50px 0;\n  \n  .tagTitle {\n    padding: 10px 10px;\n    font-weight: bold;\n    font-size:1.5rem;\n  }\n  \n  .postCount {\n    padding: 0 10px 10px 10px;\n    font-size:1rem;\n    border-bottom: 0.5px solid #0066ff;\n  }\n  \n  ul {\n    margin:30px 0;\n  }\n  \n  ul li{\n    border: none;\n    border-radius: 5px;\n    box-shadow: 0 1px 3px 0 #d4d4d5, 0 0 0 1px #d4d4d5;\n    transition: box-shadow .1s ease,transform .1s ease;\n    cursor: pointer;\n  }\n  \n  li + li {\n    margin-top: 30px;\n  }\n  \n  li .box-title {\n    padding:20px;\n  }\n\n  li .box-title p{\n    font-size:0.8rem;\n  }\n  \n  li .box-title a{\n    font-size:1.3rem;\n    text-decoration: none;\n    color: black;\n    font-weight: bold;\n  }\n  \n  li .box-title a:hover {\n    color: #0066ff;\n  }\n  \n  li .box-tag {\n    border-top:1px solid #d4d4d5;\n    padding:20px;\n  }\n`;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport { nodeType, PostListInfoType, PostPropsType } from \"../interface\"\nimport { graphql } from 'gatsby';\nimport PostList from \"../components/PostList\";\nimport {CONTENT_PER_PAGE} from \"../constants\";\n\nconst PostListTemplate: React.FC<PostPropsType> = React.memo(props => {\n  const {search} = props.location;\n  const paramString: string = search.substring(1);\n  const searchParams:URLSearchParams = new URLSearchParams(paramString);\n\n  let edges = props.data.posts.edges;\n  let _tag: string = \"ALL\";\n\n  if(searchParams.has(\"tag\")){\n    _tag = searchParams.get(\"tag\");\n    edges = edges.filter(({ node: {frontmatter: {tag}}}: nodeType) => (tag.includes(_tag)));\n  }\n  const postCount: number = edges.length;\n  const pageCount: number = postCount ? (Math.ceil(postCount / CONTENT_PER_PAGE) + 1) : 1;\n\n  const listInfo: PostListInfoType = {\n    curPage : 1,\n    count: postCount,\n    pageCount: pageCount\n  }\n\n  return (\n    <Layout>\n      <PostList postData={edges} listInfo={listInfo} tag={_tag}/>\n    </Layout>\n  );\n});\n\nPostListTemplate.displayName = 'PostListTemplate';\n\nexport default PostListTemplate;\n\nexport const pageQuery = graphql`\n  query PostListQuery {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    posts: allMarkdownRemark (\n      filter: { frontmatter: { hide: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            type\n            title\n            postUrl\n            tag\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","export const CONTENT_PER_PAGE: number = 8;\nexport const PAGE_PER_SCREEN: number = 4;\n\nexport const POST: string = 'post';\nexport const TECH: string = 'tech';\nexport const PORTFOLIO: string = 'portfolio';\nexport const RESUME: string = 'resume';\n\n// Site Information\nexport const NAME: string = '2Paradise Blog';\nexport const TITLE: string = '2Paradise Blog';\nexport const PREFIX: string = '2Paradise | ';\nexport const DESCRIPTION: string = 'I always want to be a respected developer.';\nexport const AUTHOR: string = '2Paradise';\nexport const EMAIL: string = 'robinnwpa@gmail.com';\nexport const KEYWORDS = [\n  'Gatsby',\n  'ReactJS',\n].join(', ');\nexport const SITE_URL: string = 'https://2Paradise.github.io';\nexport const PROFILE: string = 'https://avatars0.githubusercontent.com/u/65708679?s=460&u=6f2003c81185fbe1d98b89816a353f18c09b8dd5&v=4';\n\n// Social\nexport const GITHUB_ID: string = '2Paradise';\nexport const TWITTER_ID: string = '';\nexport const FACEBOOK_ID: string = 'robinnw';\nexport const LINKEDIN_ID: string = '';\n\n// Disqus (Recommend you to use this)\nexport const DISQUS_ID: string = '2Paradise';\n"],"sourceRoot":""}