{"version":3,"sources":["webpack:///./src/components/post-list/PostTagListComp.tsx","webpack:///./src/hook/use-tag-list.ts","webpack:///./src/components/tag/TagListComp.tsx","webpack:///./src/components/Post/PostComp.tsx","webpack:///./src/templates/post-template.tsx","webpack:///./node_modules/prismjs/prism.js","webpack:///(webpack)/buildin/global.js"],"names":["PostTagListComp","tags","TagBox","map","tag","url","to","key","styled","div","useTagList","edges","useStaticQuery","allMarkdownRemark","result","edge","inx","array","node","frontmatter","forEach","TagListComp","React","memo","tagsInfo","Object","keys","TagListWrap","className","idx","PostComp","markdown","html","title","date","useEffect","Prism","highlightAll","ContentWrap","PostWrap","PostTitle","pointText","substring","PostDate","PostContent","dangerouslySetInnerHTML","__html","props","PostTemplate","data","isWide","post","displayName","pageQuery","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","replace","o","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","hasOwnProperty","v","i","getLanguage","element","test","parentElement","match","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","language","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","startNode","startPos","rematch","patterns","j","length","cause","patternObj","lookbehind","greedy","lookbehindLength","pattern","global","flags","RegExp","source","currentNode","next","pos","tail","reach","str","removeCount","prev","lastIndex","from","index","p","k","matchStr","after","removeFrom","removeRange","wrapped","list","push","toArray","all","add","name","callbacks","matchedStr","newNode","count","s","e","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","hasAttribute","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","markup","tagName","includedCdataInside","def","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","clike","javascript","js","EXTENSIONS","SELECTOR","pre","matches","setAttribute","appendChild","createElement","getAttribute","extension","setLanguageClass","autoloader","loadLanguages","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","logged","console","warn","arguments","trim","g","Function"],"mappings":"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","file":"component---src-templates-post-template-tsx-efd26342d23507c4b867.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport {AiFillTags} from 'react-icons/ai'\n\ntype TagListType = {\n  tags : string[] | null | undefined\n}\n\nconst PostTagListComp: React.FC<TagListType> = ({tags}) => {\n\n    return (\n        <TagBox>\n            {tags && <AiFillTags/>}\n            {tags && tags.map(tag => {\n              const url = \"/post?tag=\" + tag;\n              return (\n                <Link to={url} key={tag}>\n                  {tag}\n                </Link>\n              );\n            })}\n        </TagBox>\n    );\n}\n\nexport default PostTagListComp;\n\nconst TagBox = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: left;\n    border-top:1px solid #d4d4d5;\n    padding:20px;\n    \n    a {\n      color:black;\n      font-size:0.7rem;\n      font-weight: bold;\n      padding: 0 7px;\n      margin:0 5px;\n      border-radius: 5px;\n      background-color: #d4d4d5;\n    }\n`;\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport { AllMarkdownRemark} from \"../types\"\n\nconst useTagList = () => {\n  const { allMarkdownRemark }: AllMarkdownRemark = useStaticQuery(\n    graphql`\n      query TagQuery {\n        allMarkdownRemark (\n          filter: {\n            frontmatter: { hide: { eq: false } }\n          }\n        ) {\n          edges {\n            node {\n              frontmatter {\n                tag\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const { edges } = allMarkdownRemark;\n\n  let result: any = {};\n\n  edges.map((edge, inx, array) => {\n    const { frontmatter : { tag } } = edge.node;\n\n    tag?.forEach((key) => {\n      if(!result[key]) {\n        result[key] = 1;\n      }\n      else\n      {\n        result[key] += 1;\n      }\n    });\n  });\n\n  return result;\n};\n\nexport default useTagList;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport useTagList from \"../../hook/use-tag-list\"\nimport { Link } from \"gatsby\"\nimport { converText } from \"../../utils/convertText\"\n\nconst TagListComp: React.FC = React.memo(() => {\n\n  const tagsInfo: any = useTagList();\n  const tags: Array<string> = Object.keys(tagsInfo);\n\n  return (\n    <TagListWrap className=\"taglist\">\n      <ul>\n        {\n          tags.map((tag, idx) => (\n            <li className=\"taglist___tagbox\" key={idx}>\n              <Link to={`/post?tag=${tag}`}>{tag}</Link>\n            </li>\n          ))\n        }\n      </ul>\n    </TagListWrap>\n  );\n});\n\nexport default TagListComp;\n\nconst TagListWrap = styled.div`\n  position: relative;\n  margin-top: 116px;\n  padding-top:20px;\n  width: 350px;\n  \n  &::before {\n    content: \"Tag Box\";\n    position: absolute;\n    font-size: 1.5rem;\n    font-weight: bold;\n    top: -40px;\n    z-index: 2;\n  }\n  \n  & ul {\n    display: flex;\n    justify-content: left;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n  & ul li {\n    padding: 0.2em 0.6em;\n    border-radius: 0.4em;\n    font-size: 0.8rem;\n    letter-spacing: 0.1em;\n    color: white;\n    background-color: #6196cc;\n  }\n  .taglist___tagbox{\n    margin-left: 4px;\n  }\n  \n  & a {\n    color: white;\n  }\n`;\n","import React, { useEffect } from \"react\"\nimport styled from \"styled-components\";\nimport Prism from \"prismjs\";\nimport { Node } from \"../../types\"\nimport PostTagListComp from \"../post-list/PostTagListComp\"\nimport TagListComp from \"../tag/TagListComp\"\n\ntype PostPropsType = {\n  markdown : Node\n}\n\ntype PostTitleType = {\n  pointText : string\n}\n\nconst PostComp: React.FC<PostPropsType> = ({markdown}) => {\n\n  const {html, frontmatter: {title, date, tag}} = markdown;\n\n  useEffect(() => {\n    Prism.highlightAll();\n  });\n\n  return (\n    <ContentWrap>\n      <PostWrap>\n        <PostTitle pointText={title.substring(0, 1)}>{title}</PostTitle>\n        <PostDate>{date}</PostDate>\n        <PostTagListComp tags={tag} />\n        <PostContent dangerouslySetInnerHTML={{ __html: html }}></PostContent>\n      </PostWrap>\n      <TagListComp />\n    </ContentWrap>\n  )\n}\n\nexport default PostComp;\n\nconst ContentWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst PostWrap = styled.div`\n  position:relative;\n  padding-top: 70px;\n  width: 840px;\n`;\n\nconst PostTitle = styled.div`\n  \n  font-weight: bold;\n  font-size: 2rem;\n  line-height: 1.2em;\n  \n  &::before {\n    content: \"${(props: PostTitleType) => props.pointText}\";\n    position: absolute;\n    font-size:7rem;\n    left: -30px;\n    top:70px;\n    opacity:0.4;\n  }\n`;\n\nconst PostDate = styled.div`\n  font-size:0.9rem;\n  border-bottom: 1px solid #3399ff;\n  padding: 10px 0;\n`;\n\nconst PostContent = styled.div`\n  margin-top:50px;\n  line-height: 1.7em;\n  \n  & ul {\n    padding-left: 40px;\n    list-style: none;\n  }\n  \n  & ul li:before {\n    content: \"•\";\n    color: #3399ff;\n    font-weight:bold;\n    font-size: 1.2rem;\n    display: inline-block;\n    width:1em;\n    margin-left: -1em;\n  }\n  \n  & img {\n    margin: 20px 0;\n  }\n`;\n","'use strict';\n\nimport React from 'react';\nimport Layout from '../components/layout';\nimport PostComp from \"../components/Post/PostComp\"\nimport { PageProps, graphql } from \"gatsby\"\nimport { PostPropsType } from \"../types\"\n\nconst PostTemplate: React.FC<PageProps<PostPropsType>>  = React.memo(({ data }) => {\n\n  return (\n    <Layout isWide={false}>\n      <PostComp markdown={data.post}/>\n    </Layout>\n  )\n});\n\nPostTemplate.displayName = 'PostTemplate';\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query PostByPath($path: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    post: markdownRemark(\n      fields: {slug: {eq: $path}}\n    ) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        hide\n        type\n        date\n        desc\n        tag\n      }\n      html\n      id\n    }\n  }\n`;\n","/* **********************************************\n     Begin prism-core.js\n********************************************** */\n/// <reference lib=\"WebWorker\"/>\nvar _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n\n\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    /**\n     * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n     * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n     * additional languages or plugins yourself.\n     *\n     * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n     *\n     * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.manual = true;\n     * // add a new <script> to load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone, id;\n\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone =\n            /** @type {Record<string, any>} */\n            {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */\n\n            /** @type {any} */\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element && !lang.test(element.className)) {\n          element = element.parentElement;\n        }\n\n        if (element) {\n          return (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Returns the script element that is currently executing.\n       *\n       * This does __not__ work for line script element.\n       *\n       * @returns {HTMLScriptElement | null}\n       */\n      currentScript: function currentScript() {\n        if (typeof document === 'undefined') {\n          return null;\n        }\n\n        if ('currentScript' in document && 1 < 2\n        /* hack to trip TS' flow analysis */\n        ) {\n            return (\n              /** @type {any} */\n              document.currentScript\n            );\n          } // IE11 workaround\n        // we'll get the src of the current script by parsing IE11's error stack trace\n        // this will not work for inline scripts\n\n\n        try {\n          throw new Error();\n        } catch (err) {\n          // Get file src url from stack. Specifically works with the format of stack traces in IE.\n          // A stack will look like this:\n          //\n          // Error\n          //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n          //    at Global code (http://localhost/components/prism-core.js:606:1)\n          var src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\n          if (src) {\n            var scripts = document.getElementsByTagName('script');\n\n            for (var i in scripts) {\n              if (scripts[i].src == src) {\n                return scripts[i];\n              }\n            }\n          }\n\n          return null;\n        }\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n\n          if (classList.contains(className)) {\n            return true;\n          }\n\n          if (classList.contains(no)) {\n            return false;\n          }\n\n          element = element.parentElement;\n        }\n\n        return !!defaultActivation;\n      }\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root ||\n        /** @type {any} */\n        _.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            var property = o[i],\n                propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n\n    /**\n     * This is the most high-level function in Prism’s API.\n     * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n     * each one of them.\n     *\n     * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n     *\n     * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n     * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n     * @memberof Prism\n     * @public\n     */\n    highlightAll: function highlightAll(async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n\n    /**\n     * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n     * {@link Prism.highlightElement} on each one of them.\n     *\n     * The following hooks will be run:\n     * 1. `before-highlightall`\n     * 2. All hooks of {@link Prism.highlightElement} for each element.\n     *\n     * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n     * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n     * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n     * @memberof Prism\n     * @public\n     */\n    highlightAllUnder: function highlightAllUnder(container, async, callback) {\n      var env = {\n        callback: callback,\n        container: container,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n\n      _.hooks.run('before-highlightall', env);\n\n      env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n      _.hooks.run('before-all-elements-highlight', env);\n\n      for (var i = 0, element; element = env.elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n\n    /**\n     * Highlights the code inside a single element.\n     *\n     * The following hooks will be run:\n     * 1. `before-sanity-check`\n     * 2. `before-highlight`\n     * 3. All hooks of {@link Prism.highlight}. These hooks will only be run by the current worker if `async` is `true`.\n     * 4. `before-insert`\n     * 5. `after-highlight`\n     * 6. `complete`\n     *\n     * @param {Element} element The element containing the code.\n     * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n     * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n     * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n     * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n     *\n     * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n     * asynchronous highlighting to work. You can build your own bundle on the\n     * [Download page](https://prismjs.com/download.html).\n     * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n     * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n     * @memberof Prism\n     * @public\n     */\n    highlightElement: function highlightElement(element, async, callback) {\n      // Find language\n      var language = _.util.getLanguage(element);\n\n      var grammar = _.languages[language]; // Set language on the element, if not present\n\n      element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language; // Set language on the parent, for styling\n\n      var parent = element.parentElement;\n\n      if (parent && parent.nodeName.toLowerCase() === 'pre') {\n        parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n      }\n\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n\n      function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n\n        _.hooks.run('before-insert', env);\n\n        env.element.innerHTML = env.highlightedCode;\n\n        _.hooks.run('after-highlight', env);\n\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n      }\n\n      _.hooks.run('before-sanity-check', env);\n\n      if (!env.code) {\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n        return;\n      }\n\n      _.hooks.run('before-highlight', env);\n\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _; // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n  }\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j],\n            inside = patternObj.inside,\n            lookbehind = !!patternObj.lookbehind,\n            greedy = !!patternObj.greedy,\n            lookbehindLength = 0,\n            alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n        /** @type {RegExp} */\n\n\n        var pattern = patternObj.pattern || patternObj;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          if (greedy && currentNode != tokenList.tail.prev) {\n            pattern.lastIndex = pos;\n            var match = pattern.exec(text);\n\n            if (!match) {\n              break;\n            }\n\n            var from = match.index + (lookbehind && match[1] ? match[1].length : 0);\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            pattern.lastIndex = 0;\n            var match = pattern.exec(str);\n          }\n\n          if (!match) {\n            continue;\n          }\n\n          if (lookbehind) {\n            lookbehindLength = match[1] ? match[1].length : 0;\n          }\n\n          var from = match.index + lookbehindLength,\n              matchStr = match[0].slice(lookbehindLength),\n              to = from + matchStr.length,\n              before = str.slice(0, from),\n              after = str.slice(to);\n          var reach = pos + str.length;\n\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n              cause: token + ',' + j,\n              reach: reach\n            });\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data),\n            lang = message.language,\n            code = message.code,\n            immediateClose = message.immediateClose;\n\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n\n    return _;\n  } // Get current script and highlight\n\n\n  var script = _.util.currentScript();\n\n  if (script) {\n    _.filename = script.src;\n\n    if (script.hasAttribute('data-manual')) {\n      _.manual = true;\n    }\n  }\n\n  function highlightAutomaticallyCallback() {\n    if (!_.manual) {\n      _.highlightAll();\n    }\n  }\n\n  if (!_.manual) {\n    // If the document state is \"loading\", then we'll use DOMContentLoaded.\n    // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n    // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n    // might take longer one animation frame to execute which can create a race condition where only some plugins have\n    // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n    // See https://github.com/PrismJS/prism/issues/2102\n    var readyState = document.readyState;\n\n    if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n      document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n    } else {\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(highlightAutomaticallyCallback);\n      } else {\n        window.setTimeout(highlightAutomaticallyCallback, 16);\n      }\n    }\n  }\n\n  return _;\n}(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n} // hack for components to work correctly in node.js\n\n\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n} // some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n\n  var Prism = window.Prism;\n  var LOADING_MESSAGE = 'Loading…';\n\n  var FAILURE_MESSAGE = function FAILURE_MESSAGE(status, message) {\n    return '✖ Error ' + status + ' while fetching file: ' + message;\n  };\n\n  var FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n  var EXTENSIONS = {\n    'js': 'javascript',\n    'py': 'python',\n    'rb': 'ruby',\n    'ps1': 'powershell',\n    'psm1': 'powershell',\n    'sh': 'bash',\n    'bat': 'batch',\n    'h': 'c',\n    'tex': 'latex'\n  };\n  var STATUS_ATTR = 'data-src-status';\n  var STATUS_LOADING = 'loading';\n  var STATUS_LOADED = 'loaded';\n  var STATUS_FAILED = 'failed';\n  var SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])' + ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  /**\n   * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n   *\n   * @param {HTMLElement} element\n   * @param {string} language\n   * @returns {void}\n   */\n\n  function setLanguageClass(element, language) {\n    var className = element.className;\n    className = className.replace(lang, ' ') + ' language-' + language;\n    element.className = className.replace(/\\s+/g, ' ').trim();\n  }\n\n  Prism.hooks.add('before-highlightall', function (env) {\n    env.selector += ', ' + SELECTOR;\n  });\n  Prism.hooks.add('before-sanity-check', function (env) {\n    var pre =\n    /** @type {HTMLPreElement} */\n    env.element;\n\n    if (pre.matches(SELECTOR)) {\n      env.code = ''; // fast-path the whole thing and go to complete\n\n      pre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n      // add code element with loading message\n\n      var code = pre.appendChild(document.createElement('CODE'));\n      code.textContent = LOADING_MESSAGE;\n      var src = pre.getAttribute('data-src');\n      var language = env.language;\n\n      if (language === 'none') {\n        // the language might be 'none' because there is no language set;\n        // in this case, we want to use the extension as the language\n        var extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n        language = EXTENSIONS[extension] || extension;\n      } // set language classes\n\n\n      setLanguageClass(code, language);\n      setLanguageClass(pre, language); // preload the language\n\n      var autoloader = Prism.plugins.autoloader;\n\n      if (autoloader) {\n        autoloader.loadLanguages(language);\n      } // load file\n\n\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', src, true);\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          if (xhr.status < 400 && xhr.responseText) {\n            // mark as loaded\n            pre.setAttribute(STATUS_ATTR, STATUS_LOADED); // highlight code\n\n            code.textContent = xhr.responseText;\n            Prism.highlightElement(code);\n          } else {\n            // mark as failed\n            pre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n            if (xhr.status >= 400) {\n              code.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n            } else {\n              code.textContent = FAILURE_EMPTY_MESSAGE;\n            }\n          }\n        }\n      };\n\n      xhr.send(null);\n    }\n  });\n  Prism.plugins.fileHighlight = {\n    /**\n     * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n     *\n     * Note: Elements which are already loaded or currently loading will not be touched by this method.\n     *\n     * @param {ParentNode} [container=document]\n     */\n    highlight: function highlight(container) {\n      var elements = (container || document).querySelectorAll(SELECTOR);\n\n      for (var i = 0, element; element = elements[i++];) {\n        Prism.highlightElement(element);\n      }\n    }\n  };\n  var logged = false;\n  /** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\n  Prism.fileHighlight = function () {\n    if (!logged) {\n      console.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n      logged = true;\n    }\n\n    Prism.plugins.fileHighlight.highlight.apply(this, arguments);\n  };\n})();","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}